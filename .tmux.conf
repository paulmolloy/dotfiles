# reload config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Setup tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'

set -g mouse on
# repeat the last command on right pane.

# repeat last shell command on right pane (if it happens to be a shell)
bind-key e select-pane -t 1 \; send-keys ENTER UP  ENTER \; last-pane

# swap right pane in window 0 with default pane in window 1
#
# make sure our current window is listed as 0
# create a second window if it doesn't exist
# select our 0 window again in case we created a new one
# select our second pane in 0 window
# join that pane to window 1
# select the pane above the one we just moved there
# move that pane to window 0
# send the up arrow and enter to that pane (run last shell command)
# switch to last pane, which will be window 0, pane 0 (primary left)
# make sure we are horiontal-even
# redraw vim -- since it gets fucked up in this build when selecting
#   layout programmatically. This whole thing assumes vim in left pane.
bind-key d \
  if-shell 'tmux select-window -t :0' '' 'move-window -t :0' \; \
  if-shell 'test $(tmux list-panes | wc -l) -gt 1' '' 'split-window -h' \; \
  if-shell 'tmux select-window -t :1' '' 'new-window' \; \
  select-window -t 0 \; \
  select-pane -t 1 \; \
  join-pane -t 1.0 \; \
  select-pane -U \; \
  join-pane -h -t 0.0 \; \
  last-pane

# Copying with mouse. hold shift first.

# Advertize colors.
set -g default-terminal "screen-256color"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# Last ran env is restored when tmux restarted.
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-save-interval '5'
set -g status-right 'Continuum status: #{continuum_status}'
set -g @resurrect-capture-pane-contents 'on'
